@model GameCenterMVC.Models.Employee
@using GameCenterMVC.DAL
@{
    ViewBag.Title = "ADD";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
	
	<style>

		.field-validation-error {
			color: #e80c4d;
			font-weight: bold;
		}

		input.input-validation-error {
			border: 1px solid #e80c4d;
		}
	</style>
<h2>ADD</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Employee</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-5" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PersonalID, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonalID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonalID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g MM/DD/YYYY" } })
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", @type = "password" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--<div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password", @type = "password" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>-->

    <div class="form-group">
        @Html.LabelFor(model => model.PayCheck, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PayCheck, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g 200$" } })
            @*@Html.TextBoxFor(model=>model.PayCheck, new { placeholder = "This is required"})*@
            @Html.ValidationMessageFor(model => model.PayCheck, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.RoleID, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.RoleID, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(model => model.RoleID, new SelectList(RolesDAL.GetALL().ToList(), "RoleID", "RoleID"), new
               {
                   @class = "form-control"

               })
            @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ActiveDate, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ActiveDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.ActiveDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.InsertBy, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.InsertBy, new { htmlAttributes = new { @class = "form-control", @Value = Session["Username"], @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.InsertBy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InsertDate, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.InsertDate, new {@value = DateTime.Now })*@
            @Html.EditorFor(model => model.InsertDate, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToShortDateString(), @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.InsertDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-info" />
        <input type="reset" value="Reset" class="btn btn-danger" />

    </div>


    @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
