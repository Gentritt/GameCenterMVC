@model GameCenterMVC.Models.Bill
@using GameCenterMVC.Models

@{
    ViewBag.Title = "Details";
}


@using (Html.BeginForm("Add","Home"))
{
    <div class="modal-header bg-info">
@*<button type="button"  class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true"><i class="fa fa-times-circle"></i></span>
    </button>*@
    <h4 class="modal-title">Activate PC</h4>
</div>

<div class="modal-body bg-light">
@*<div>
    <p>PC: @Html.DisplayFor(model => model.ComputerID)</p>
    <p>Price Per Hour: @Html.DisplayFor(model => model.PricePerHour)</p>

    @Html.LabelFor(model => model.ComputerID, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ComputerID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.ComputerID, "", new { @class = "text-danger" })

    </div>
    @Html.LabelFor(model => model.PricePerHour, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.PricePerHour, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.PricePerHour, "", new { @class = "text-danger"})

    </div>*@

@*<div>
        <table class="table table-bordered bg-light">
            <tr>
                <td>@Html.DisplayName(StaticCLass.ComputerID.ToString())</td>
                <td>@Html.Editor(StaticCLass.ComputerID.ToString())</td>
                <p>@StaticCLass.ComputerID</p>
            </tr>


        </table>

        <p>@StaticCLass.ComputerID</p>

    </div>*@

@*<div>

        <table class="table table-bordered bg-light">
            <tr>
                <td>@Html.DisplayNameFor(model => model.ComputerID)</td>
                <td>@Html.LabelFor(model => model.ComputerID, "ComputerID")</td>
                <td>@Html.EditorFor(model => model.ComputerID, new { htmlAttributes = new { @class = "form-control", @Value = StaticCLass.ComputerID, @readonly = "readonly" } })</td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.EmployeeID)</td>
                <td>@Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control", @Value = 15, @readonly = "readonly" } })</td>
            </tr>
            <tr>
                    <td>@Html.DisplayNameFor(model => model.ComputerPartID)</td>
                    <td>@Html.DisplayFor(model => model.ComputerPartID)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => model.PricePerHour)</td>
                    <td>@Html.DisplayFor(model => model.PricePerHour)</td>
                </tr>
        </table>
    </div>*@
<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.ComputerID, "ComputerID", htmlAttributes: new { @class = "control-label col-md-5" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.ComputerID, new { htmlAttributes = new { @class = "form-control", @Value = StaticCLass.ComputerID, @readonly = "readonly" } })
            @*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-5" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control", @Value = StaticCLass.EmployeeID, @readonly = "readonly" } })
            @*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ClientID, "Client", htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.RoleID, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(model => model.ClientID, new SelectList(GameCenterMVC.DAL.ClientDAL.GetALL().ToList(), "ClientID", "UserName"), new
               {
                   @class = "form-control"

               })
            @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StartTime, "Start Time", htmlAttributes: new { @class = "control-label col-md-5" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToLongTimeString(), @readonly = "readonly" } })
            @*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
        </div>
    </div>
</div>

</div>
<script src="~/Scripts/Modal/ResetModal.js"></script>

<div class="modal-footer btn-group-toggle">
    <input type="submit" value="Submit" class="btn btn-info" />
    <button type="button" class="btn btn-danger"
            data-dismiss="modal">
        Close
    </button>
</div>
}
