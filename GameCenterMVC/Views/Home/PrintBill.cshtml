@model GameCenterMVC.Models.Bill
@using GameCenterMVC.Models

@{
	ViewBag.Title = "Details";
}


@using (Html.BeginForm("", ""))
{
	<div class="modal-header bg-info">

		<h4 class="modal-title">Print Bill</h4>
	</div>

	<div class="modal-body bg-light ">

		<div class="form-horizontal">
			<div class="form-group">
				@Html.LabelFor(model => model.BillID, "Bill ID", htmlAttributes: new { @class = "control-label col-md-5" })

				<div class="col-md-10">
					@Html.EditorFor(model => model.BillID, new
					{
						htmlAttributes = new
						{
							@class = "form-control",
							@readonly = "readonly"
						}
					})

				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.ComputerID, "ComputerID", htmlAttributes: new { @class = "control-label col-md-5" })

				<div class="col-md-10">
					@Html.EditorFor(model => model.ComputerID, new
					{
						htmlAttributes = new
						{
							@class = "form-control",
							@readonly = "readonly"
						}
					})

				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-5" })

				<div class="col-md-10">
					@Html.EditorFor(model => model.EmployeeID, new
					{
						htmlAttributes = new
						{
							@class = "form-control",
							@readonly = "readonly"
						}
					})

				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.ClientID, "Client", htmlAttributes: new { @class = "control-label col-md-5" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ClientID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

					@Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.StartTime, "Start Time", htmlAttributes: new { @class = "control-label col-md-5" })

				<div class="col-md-10">
					@Html.EditorFor(model => model.StartTime, new
					{
						htmlAttributes = new
						{
							@class = "form-control",
							@readonly = "readonly"
						}
					})

				</div>
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.EndTime, "End Time", htmlAttributes: new { @class = "control-label col-md-5" })

			<div class="col-md-10">
				@Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToLongTimeString(), @readonly = "readonly" } })
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Total, "Total", htmlAttributes: new { @class = "control-label col-md-5" })

			<div class="col-md-10">
				@Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", @Value = 1, @readonly = "readonly" } })
			</div>
		</div>
	</div>


	<script src="~/Scripts/Modal/ResetModal.js"></script>

	<div class="modal-footer btn-group-toggle">
		<input type="submit" value="Submit" class="btn btn-info" />
		<button type="button" class="btn btn-danger"
				data-dismiss="modal">
			Close
		</button>


	</div>
}

