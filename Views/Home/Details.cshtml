@model GameCenterMVC.Models.Bill
@using GameCenterMVC.Models

@{
	ViewBag.Title = "Details";
}


@using (Html.BeginForm("Add", "Home"))
{
	<div class="modal-header bg-info">
		<h4 class="modal-title">Activate PC</h4>
	</div>

	<div class="modal-body bg-light">

		<div class="form-horizontal">
			<div class="form-group">
				@Html.LabelFor(model => model.ComputerID, "ComputerID", htmlAttributes: new { @class = "control-label col-md-5" })

				<div class="col-md-10">
					@Html.EditorFor(model => model.ComputerID, new { htmlAttributes = new { @class = "form-control", @Value = StaticCLass.ComputerID, @readonly = "readonly" } })
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-5" })

				<div class="col-md-10">
					@Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control", @Value = StaticCLass.EmployeeID, @readonly = "readonly" } })
					@*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.ClientID, "Client", htmlAttributes: new { @class = "control-label col-md-5" })
				<div class="col-md-10">
					@*@Html.EditorFor(model => model.RoleID, new { htmlAttributes = new { @class = "form-control" } })*@
					@Html.DropDownListFor(model => model.ClientID, new SelectList(GameCenterMVC.DAL.ClientDAL.GetALL().ToList(), "ClientID", "UserName"), new
					   {
						   @class = "form-control"

					   })
					@Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.StartTime, "Start Time", htmlAttributes: new { @class = "control-label col-md-5" })

				<div class="col-md-10">
					@Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToLongTimeString(), @readonly = "readonly" } })
					@*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
				</div>
			</div>
		</div>

	</div>
	<script src="~/Scripts/Modal/ResetModal.js"></script>

	<div class="modal-footer btn-group-toggle">
		<input type="submit" value="Start	" class="btn btn-info" />
		<button type="button" class="btn btn-danger"
				data-dismiss="modal">
			Close
		</button>

		@*<a href="@Url.Action("PrintBill", "Home", new {id =  Model.ComputerID })"data-target="#ModalTest" data-toggle="modal" data-dismiss="modal" >
			<input type='button' class="btn btn-outline-danger" value='Print Bill' />
		</a>*@

	</div>
}

@*<link href="~/Content/Modal/Modal.css" rel="stylesheet" />
<div class="container">

	<div class="modal" id="ModalTest-1" role="dialog" data-keyboard="false" data-backdrop="static">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<button class="close" data-dismiss="modal">&times;</button>
					<h4>DemoModalTitle</h4>
				</div>
				<div class="modal-body">

						</div>
					<div class="modal-footer">
							<button class="fa fa-plus-circle" data-dismiss="modal">

							</button>
						</div>

			</div>
		</div>
	</div>

</div>*@
